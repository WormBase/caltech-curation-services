// javascript for form at ~azurebrd/public_html/cgi-bin/forms/community_gene_description.cgi
// autocomplete (not forced) on genes and species, enter PMIDs and use those plus previous matches of pmid-title to look up new pmid titles to add to list of pmid-titles in readonly textarea.  2013 06 02

var cgiUrl = 'community_gene_description.cgi';

YAHOO.util.Event.addListener(window, "load", function() {          // on load assign listeners
    setAutocompleteListeners();                                    // add listener for gene, species, pmids
}); // YAHOO.util.Event.addListener(window, "load", function() 


function setAutocompleteListeners() {                              // add listener for gene, species, pmids
    var autocompleteFieldsArray = ['Gene', 'Species'];
    for (var i = 0; i < autocompleteFieldsArray.length; i++) {     // for each field to autocomplete
        var field = autocompleteFieldsArray[i];
        settingAutocompleteListeners = function() {
            var sUrl = cgiUrl + "?action=autocompleteXHR&field=" + field + "&";   // ajax calls need curator and datatype
            var oDS = new YAHOO.util.XHRDataSource(sUrl);          // Use an XHRDataSource
            oDS.responseType = YAHOO.util.XHRDataSource.TYPE_TEXT; // Set the responseType
            oDS.responseSchema = {                                 // Define the schema of the delimited results
                recordDelim: "\n",
                fieldDelim: "\t"
            };
            oDS.maxCacheEntries = 5;                               // Enable caching

            var forcedOrFree = "forced";
            var inputElement = document.getElementById(field);
            var containerElement = document.getElementById(forcedOrFree + field + "Container");
            var forcedOAC = new YAHOO.widget.AutoComplete(inputElement, containerElement, oDS);
            forcedOAC.queryQuestionMark = false;                   // don't add a ? to the sUrl query since it's been built with some other values
            forcedOAC.maxResultsDisplayed = 500;
            forcedOAC.forceSelection = false;
// Don't needs this because don't need action on these, if it was necessary, would have to create functions like in the OA
//             forcedOAC.itemSelectEvent.subscribe(onAutocompleteItemSelect);
//             forcedOAC.selectionEnforceEvent.subscribe(onAutocompleteSelectionEnforce);
//             forcedOAC.itemArrowToEvent.subscribe(onAutocompleteItemHighlight);
//             forcedOAC.itemMouseOverEvent.subscribe(onAutocompleteItemHighlight);
            return {
                oDS: oDS,
                forcedOAC: forcedOAC
            }
        }();
    } // for (var i = 0; i < autocompleteFieldsArray.length; i++)


    // from http://stackoverflow.com/questions/1909441/jquery-keyup-delay
    var delay = (function(){						// delay executing a function until user has stopped typing for a timeout amount
        var timer = 0;
        return function(callback, ms){
            clearTimeout (timer);
            timer = setTimeout(callback, ms);
        };
    })();

    var oElement = document.getElementById("pmids");
    YAHOO.util.Event.addListener(oElement, "keyup", function() {
        delay(function(){
//           alert('Time elapsed!');
            var pmidTitles = document.getElementById("pmidTitles").value;
            var pmids      = document.getElementById("pmids").value;
            var callbacks = {
                success : function (o) {                                  // Successful XHR response handler
                    if (o.responseText !== undefined) { document.getElementById('pmidTitles').value = o.responseText; } }, };
            pmids = convertDisplayToUrlFormat(pmids);                     // convert <newValue> to URL format by escaping characters
            pmidTitles = convertDisplayToUrlFormat(pmidTitles);           // convert <newValue> to URL format by escaping characters
            var sUrl = cgiUrl + "?action=pmidToTitle&pmids="+pmids+"&pmidTitles="+pmidTitles;
                YAHOO.util.Connect.asyncRequest('GET', sUrl, callbacks);      // Make the call to the server for term info data
            
        }, 1000 );
    });

} // function setAutocompleteListeners()


function convertDisplayToUrlFormat(value) {
    if (value !== undefined) {                                                  // if there is a display value replace stuff
        if (value.match(/\n/)) { value = value.replace(/\n/g, " "); }           // replace linebreaks with <space>
        if (value.match(/\+/)) { value = value.replace(/\+/g, "%2B"); }         // replace + with escaped +
        if (value.match(/\#/)) { value = value.replace(/\#/g, "%23"); }         // replace # with escaped #
    }
    return value;                                                               // return value in format for URL
} // function convertDisplayToUrlFormat(value)




