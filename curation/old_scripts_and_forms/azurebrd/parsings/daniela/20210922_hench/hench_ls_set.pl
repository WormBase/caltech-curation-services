#!/usr/bin/perl -w

# process hench large scale expression set

# cp and fromdos  /home/acedb/draciti/Hench/Hench.txt

# 2021 09 24

# added passthrough for WBTransgene format entries.  2021 12 02


# Expr_pattern : ID autogenerated
# Reference	"WBPaper00046864"
# Gene	"WBGeneID" Column D of 'Hench' file
# Reflects_endogenous_expression_of		"WBGeneID"
# Reporter_gene
# Pattern	"Time-lapse fluorescence microscopy was performed, including DIC for morphology. Gene expression patterns were summarized in 4 manners: Average over time, Average over time and at different positions along the anterior-posterior (AP) axis, a voxelized representation over time, and on individual cells overlaid from a reference coordinate dataset (https:\/\/doi.org\/10.1016\/j.ydbio.2009.06.014). The analysis was done with a pipeline based on the multi-purpose image analysis software Endrov (https:\/\/doi.org\/10.1038\/nmeth.2478), which further is needed to browse the raw recording data. Thumbnail movies were also generated, using maximum Z projection for the 3D fluorescence channel. Raw recordings available in the Endrov OST-file format are available at https:\/\/www.ebi.ac.uk\/biostudies\/studies\/S-BIAD191?query=S-BIAD191"
# Transgene	"WBtransgeneID" Column J of 'Hench' file
# Strain	"WBStrainID" Column B of 'Hench' file

# Picture : ID  autogenerated
# Reference	“WBPaper00046864”
# Description	“Left panel: Average gene expression over time. Time is defined by the following landmark events during embryogenesis: 0 is when the cell ABa starts to exist; 10 at the beginning of gastrulation; 43 during the ventral enclosure; 54 at the 2-fold tail stage. Time is extrapolated linearly after this last event. Right panel: Average gene expression over time as well as the anterior-posterior axis, defined as from one tip of the embryo to the other. The signal is radially integrated along the AP-axis. Sudden jumps over time may be due to imperfect stitching at the times when exposure time changes (dynamically adjusted to minimize phototoxicity). Toward the later time points the embryo begins to move which causes the peaks to move along the AP-axis.”
# Name	“filename” Column F of ‘Hench’ file
# Expr_pattern	“ExprID” corresponding ExprID
# Contact	“WBPerson6635”
# Person_name	“Johan Henriksson”

# Movie : ID autogenerated
# Reference	“WBPaper00046864”
# Description	“Thumbnail movie showing DIC of the center plane in the z-direction, and fluorescent channel(s) with gene expression (maximum intensity projection). More recordings are available at https:\/\/www.ebi.ac.uk\/biostudies\/studies\/S-BIAD191?query=S-BIAD191”
# Public_name	“filename” Column H of ‘Hench’ file” e.g. “lip-1 (AH142_070827.ost) quantified.avi” Note: not sure spaces are creating problems
# Expr_pattern	“ExprID” Assign corresponding ExprIDs


use strict;
use diagnostics;
use DBI;
use Encode qw( from_to is_utf8 );

my $dbh = DBI->connect ( "dbi:Pg:dbname=testdb", "", "") or die "Cannot connect to database!\n"; 
my $result;

my %strain;
$result = $dbh->prepare( "SELECT * FROM obo_name_strain " );
$result->execute() or die "Cannot prepare statement: $DBI::errstr\n";
while (my @row = $result->fetchrow) {
  if ($row[0] =~ m/WBStrain/) { $strain{$row[1]} = $row[0]; } }

my %transgene;
$result = $dbh->prepare( "SELECT trp_name, trp_publicname FROM trp_name, trp_publicname WHERE trp_name.joinkey = trp_publicname.joinkey" );
$result->execute() or die "Cannot prepare statement: $DBI::errstr\n";
while (my @row = $result->fetchrow) {
  if ($row[0] =~ m/WBTransgene/) { $transgene{$row[1]} = $row[0]; } }

my $aceout = '';
my $exprid = 1170000;
my $picid = 1150000;
my $movid = 100000;
my $henchfile = 'Hench.txt';
open (IN, "<$henchfile") or die "Cannot open $henchfile : $!";
my $header = <IN>;
while (my $line = <IN>) {
  chomp $line;
  my @rows = split/\t/, $line;

  $exprid++;
  my $wbexpr = "Expr" . $exprid;
  $aceout .= qq(Expr_pattern : "$wbexpr"\n);
  $aceout .= qq(Reference\t"WBPaper00046864"\n);
  $aceout .= qq(Gene\t"$rows[3]"\n);
  $aceout .= qq(Reflects_endogenous_expression_of\t"$rows[3]"\n);
  $aceout .= qq(Reporter_gene\n);
  $aceout .= qq(Pattern\t"Time-lapse fluorescence microscopy was performed, including DIC for morphology. Gene expression patterns were summarized in 4 manners: Average over time, Average over time and at different positions along the anterior-posterior (AP) axis, a voxelized representation over time, and on individual cells overlaid from a reference coordinate dataset (https:\\/\\/doi.org\\/10.1016\\/j.ydbio.2009.06.014). The analysis was done with a pipeline based on the multi-purpose image analysis software Endrov (https:\\/\\/doi.org\\/10.1038\\/nmeth.2478), which further is needed to browse the raw recording data. Thumbnail movies were also generated, using maximum Z projection for the 3D fluorescence channel. Raw recordings available in the Endrov OST-file format are available at https:\\/\\/www.ebi.ac.uk\\/biostudies\\/studies\\/S-BIAD191?query=S-BIAD191"\n);
  if ($rows[9]) { 
    if ($transgene{$rows[9]}) { $aceout .= qq(Transgene\t"$transgene{$rows[9]}"\n); }
    elsif ($rows[9] =~ m/WBTransgene/) { $aceout .= qq(Transgene\t"$rows[9]"\n); }
    else { print qq(ERR no WBTransgene for $rows[9]\n); } }
  if ($rows[1]) { 
    if ($strain{$rows[1]}) { $aceout .= qq(Strain\t"$strain{$rows[1]}"\n); }
    else { print qq(ERR no WBStrain for $rows[1]\n); } }
  $aceout .= "\n";

  $picid++;
  my $wbpic = "WBPicture" . &pad10Zeros($picid);
  $aceout .= qq(Picture : "$wbpic"\n);
  $aceout .= qq(Reference\t"WBPaper00046864"\n);
  $aceout .= qq(Description\t"Average gene expression over time. Time is defined by the following landmark events during embryogenesis: 0 is when the cell ABa starts to exist; 10 at the beginning of gastrulation; 43 during the ventral enclosure; 54 at the 2-fold tail stage. Time is extrapolated linearly after this last event. Right panel: Average gene expression over time as well as the anterior-posterior axis, defined as from one tip of the embryo to the other. The signal is radially integrated along the AP-axis. Sudden jumps over time may be due to imperfect stitching at the times when exposure time changes (dynamically adjusted to minimize phototoxicity). Toward the later time points the embryo begins to move which causes the peaks to move along the AP-axis."\n);
  $aceout .= qq(Name\t"$rows[5]"\n);
  $aceout .= qq(Expr_pattern\t"Expr$exprid"\n);
  $aceout .= qq(Contact\t"WBPerson6635"\n);
  $aceout .= qq(Person_name\t"Johan Henriksson"\n);
  $aceout .= "\n";

  $movid++;
  my $movie_name = $rows[7];
  $movie_name =~ s/ /_/g;
  my $wbmov = "WBMovie" . &pad10Zeros($movid);
  $aceout .= qq(Movie : "$wbmov"\n);
  $aceout .= qq(Reference\t"WBPaper00046864"\n);
  $aceout .= qq(Description\t"Thumbnail movie showing DIC of the center plane in the z-direction, and fluorescent channel(s) with gene expression (maximum intensity projection). More recordings are available at https:\\/\\/www.ebi.ac.uk\\/biostudies\\/studies\\/S-BIAD191?query=S-BIAD191"\n);
  $aceout .= qq(Public_name\t"$movie_name"\n);
  $aceout .= qq(Expr_pattern\t"Expr$exprid"\n);
  $aceout .= "\n";
} # while (my $line = <IN>)
close (IN) or die "Cannot close $henchfile : $!";

my $outfile = 'hench.ace';
open (OUT, ">$outfile") or die "Cannot create $outfile : $!";
print OUT qq($aceout);
close (OUT) or die "Cannot create $outfile : $!";

sub pad10Zeros {                # take a number and pad to 10 digits
  my $number = shift;
  if ($number =~ m/^0+/) { $number =~ s/^0+//g; }               # strip leading zeros
  if ($number < 10) { $number = '000000000' . $number; }
  elsif ($number < 100) { $number = '00000000' . $number; }
  elsif ($number < 1000) { $number = '0000000' . $number; }
  elsif ($number < 10000) { $number = '000000' . $number; }
  elsif ($number < 100000) { $number = '00000' . $number; }
  elsif ($number < 1000000) { $number = '0000' . $number; }
  elsif ($number < 10000000) { $number = '000' . $number; }
  elsif ($number < 100000000) { $number = '00' . $number; }
  elsif ($number < 1000000000) { $number = '0' . $number; }
  return $number;
} # sub pad10Zeros

sub pad9Zeros {         # take a number and pad to 9 digits
  my $number = shift;
  if ($number =~ m/^0+/) { $number =~ s/^0+//g; }               # strip leading zeros
  if ($number < 10) { $number = '00000000' . $number; }
  elsif ($number < 100) { $number = '0000000' . $number; }
  elsif ($number < 1000) { $number = '000000' . $number; }
  elsif ($number < 10000) { $number = '00000' . $number; }
  elsif ($number < 100000) { $number = '0000' . $number; }
  elsif ($number < 1000000) { $number = '000' . $number; }
  elsif ($number < 10000000) { $number = '00' . $number; }
  elsif ($number < 100000000) { $number = '0' . $number; }
  return $number;
} # sub pad9Zeros

sub pad8Zeros {         # take a number and pad to 8 digits
  my $number = shift;
  if ($number =~ m/^0+/) { $number =~ s/^0+//g; }               # strip leading zeros
  if ($number < 10) { $number = '0000000' . $number; }
  elsif ($number < 100) { $number = '000000' . $number; }
  elsif ($number < 1000) { $number = '00000' . $number; }
  elsif ($number < 10000) { $number = '0000' . $number; }
  elsif ($number < 100000) { $number = '000' . $number; }
  elsif ($number < 1000000) { $number = '00' . $number; }
  elsif ($number < 10000000) { $number = '0' . $number; }
  return $number;
} # sub pad8Zeros

__END__

