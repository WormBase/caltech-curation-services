#!/usr/bin/perl

# generate Waterson data from Daniela's list of files.  Paker is the first author.  2022 04 18

use strict;
use diagnostics;

my $embyro_file = 'embryolist';
my $lineage_file = 'lineagelist';

my $expr_out;
my $pic_out;

my $exprId = 2000000;
my $picId  = 1160000;
my @infiles = qw(embryolist lineagelist);
for my $infile (@infiles) {
  open (IN, "<$infile") or die "Cannot open $infile : $!";
  while (my $line = <IN>) {
    chomp $line;
    my ($wbgene) = $line =~ m/(WBGene\d+)/;
    my $wbexprId = 'Expr' . $exprId;
    $exprId++;
    my $picIdpad = &pad10Zeros($picId);
    $picId++;
    my $wbpicId = 'WBPicture' . $picIdpad;
    $expr_out .= qq(Expr_pattern : $wbexprId\n);
    $expr_out .= qq(Reference\t"WBPaper00057286"\n);
    $expr_out .= qq(Gene\t"$wbgene"\n);
    $expr_out .= qq(Reflects_endogenous_expression_of\t"$wbgene"\n);
    $expr_out .= qq(RNAseq\n);
#     $expr_out .= qq(Pattern\t"Single cell embryonic expression. Data can be downloaded from http:\\/\\/caltech.wormbase.org\\/pub\\/wormbase\\/datasets-published\\/packer2019\\/. Interactive visualizations are available as a web app (https:\\/\\/cello.shinyapps.io\\/celegans\\/) and can also be installed as an R package (https:\\/\\/github.com\\/qinzhu\\/VisCello.celegans). "\n);
    $expr_out .= qq(Pattern\t"Single cell embryonic expression. Only cell types with an expression fraction of greater 0.2 of the maximum  expressed fraction are labeled (Full data can be downloaded from http:\\/\\/caltech.wormbase.org\\/pub\\/wormbase\\/datasets-published\\/packer2019\\/).  The colors represent the broad cell class to which the cell type has been assigned. The size of the point is proportional to the log2 of the numbers of cells in the dataset of that cell type. Interactive visualizations are available as a web app (https:\\/\\/cello.shinyapps.io\\/celegans\\/) and can also be installed as an R package (https:\\/\\/github.com\\/qinzhu\\/VisCello.celegans)."\n);
    $expr_out .= qq(\n);
    $pic_out .= qq(Picture : $wbpicId\n);
    $pic_out .= qq(Reference\t"WBPaper00057286"\n);
#     $pic_out .= qq(Description\t"Single cell embryonic expression. Data can be downloaded from http:\\/\\/caltech.wormbase.org\\/pub\\/wormbase\\/datasets-published\\/packer2019\\/. Interactive visualizations are available as a web app (https:\\/\\/cello.shinyapps.io\\/celegans\\/) and can also be installed as an R package (https:\\/\\/github.com\\/qinzhu\\/VisCello.celegans). "\n);
    $pic_out .= qq(Description\t"Single cell embryonic expression. Only cell types with an expression fraction of greater 0.2 of the maximum  expressed fraction are labeled (Full data can be downloaded from http:\\/\\/caltech.wormbase.org\\/pub\\/wormbase\\/datasets-published\\/packer2019\\/).  The colors represent the broad cell class to which the cell type has been assigned. The size of the point is proportional to the log2 of the numbers of cells in the dataset of that cell type. Interactive visualizations are available as a web app (https:\\/\\/cello.shinyapps.io\\/celegans\\/) and can also be installed as an R package (https:\\/\\/github.com\\/qinzhu\\/VisCello.celegans)."\n);
    $pic_out .= qq(Name\t"$line"\n);
    $pic_out .= qq(Expr_pattern\t"$wbexprId"\n);
    $pic_out .= qq(Contact\t"WBPerson1562"\n);
    $pic_out .= qq(Person_name\t"Robert H. Waterston"\n);
    $pic_out .= qq(\n);
  } # while (my $line = <IN>)
  close (IN) or die "Cannot close $infile : $!";
}

print $expr_out;
print $pic_out;

sub pad10Zeros {                # take a number and pad to 10 digits
  my $number = shift;
  if ($number =~ m/^0+/) { $number =~ s/^0+//g; }               # strip leading zeros
  if ($number < 10) { $number = '000000000' . $number; }
  elsif ($number < 100) { $number = '00000000' . $number; }
  elsif ($number < 1000) { $number = '0000000' . $number; }
  elsif ($number < 10000) { $number = '000000' . $number; }
  elsif ($number < 100000) { $number = '00000' . $number; }
  elsif ($number < 1000000) { $number = '0000' . $number; }
  elsif ($number < 10000000) { $number = '000' . $number; }
  elsif ($number < 100000000) { $number = '00' . $number; }
  elsif ($number < 1000000000) { $number = '0' . $number; }
  return $number;
} # sub pad10Zeros

__END__

Expr1000

    my $picId = &pad10Zeros($newPgid);
    ($returnValue)  = &insertToPostgresTableAndHistory('pic_name', $newPgid, "WBPicture$picId"); }


Expression
Expr_pattern : ID autogenerated starting from ID 1180000
Reference	"WBPaper00057286"
Gene	"WBGeneID" from file names
Reflects_endogenous_expression_of		"WBGeneID"
RNAseq
Pattern		"Single cell embryonic expression. Data can be downloaded from <http://caltech.wormbase.org/pub/wormbase/datasets-published/packer2019/>. Interactive visualizations are available as a web app (https://cello.shinyapps.io/celegans/) and can also be installed as an R package (https://github.com/qinzhu/VisCello.celegans). >"

Pictures
Picture : ID  autogenerated starting from WBPicture0001160000
Reference	"WBPaper00057286"
Description	"Single cell embryonic expression. Data can be downloaded from <http://caltech.wormbase.org/pub/wormbase/datasets-published/packer2019/>. Interactive visualizations are available as a web app (https://cello.shinyapps.io/celegans/) and can also be installed as an R package (https://github.com/qinzhu/VisCello.celegans). "
Name	"filename" including the .jpg
Expr_pattern	"ExprID" corresponding ExprID
Contact		"WBPerson1562"
Person_name	"Robert H. Waterston"

