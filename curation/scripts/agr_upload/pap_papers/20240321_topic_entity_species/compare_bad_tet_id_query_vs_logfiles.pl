#!/usr/bin/env perl

# ABC prod was not working well and it wasn't taking the who/when we were sending.  compare the logs
# from 2025 08 02 until 20250913  against the prod output from
#
# select *
# from topic_entity_tag
# where created_by not like 'WBPerson%'
#   and created_by <> 'ACKnowledge_pipeline'
#   and created_by <> 'caltech_pipeline'
#   and entity_type = 'ATP:0000123'
#   and topic_entity_tag_source_id in (
#     select topic_entity_tag_source_id
#     from topic_entity_tag_source
#     where secondary_data_provider_id = (
#       select mod_id
#       from mod
#       where abbreviation = 'WB'
#     )
#   );
#
# to see what went into ABC prod with the wrong data, for Kimberly.  2025 09 25



use strict;
use diagnostics;
use DBI;
use JSON;
use Jex;
use Encode qw( from_to is_utf8 );
use Dotenv -load => '/usr/lib/.env';

my @tetids = qw
my %queryIds;
foreach (@tetids) { $queryIds{$_}++; }

my %logIds;
my @dates = qw( 20250802 20250809 20250816 20250823 20250830 20250906 20250913 );

foreach my $date (@dates) {
  my $infile = 'cron_files/populate_species_topic_entity.api.prod.' . $date . '.api';
  open (IN, $infile) or die "Cannot open $infile : $!";
  while (my $line = <IN>) {
    if ($line =~ m/"New tag created successfully.","topic_entity_tag_id":(\d+)}/) { $logIds{$1}++; }
  }
  close (IN) or die "Cannot close $infile : $!";
}

# Find keys in %logIds not in %queryIds
my @only_in_log = sort { $a <=> $b } grep { !exists $queryIds{$_} } keys %logIds;

# Find keys in %queryIds not in %logIds
my @only_in_query = sort { $a <=> $b } grep { !exists $logIds{$_} } keys %queryIds;

# Output
print "Only in logIds: @only_in_log\n";
print "Only in queryIds: @only_in_query\n";

# {"status":"success","message":"New tag created successfully.","topic_entity_tag_id":396853}
# -rw-r--r-- 1 root root 263861 Aug  2 13:00 populate_species_topic_entity.api.prod.20250802.api


__END__

