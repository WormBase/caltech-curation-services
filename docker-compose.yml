version: "3.7"
services:
  db:
    image: postgres:11
    restart: always
    environment:
      POSTGRES_USER: ${PSQL_USERNAME}
      POSTGRES_PASSWORD: ${PSQL_PASSWORD}
      POSTGRES_DB: ${PSQL_DATABASE}
      POSTGRES_PORT: ${PSQL_PORT}
      TZ: 'America/Los_Angeles'
      PGTZ: 'America/Los_Angeles'
    ports:
      - "${PSQL_PORT}:${PSQL_PORT}"
    command: postgres -c config_file=/etc/postgresql.conf -c hba_file=/etc/pg_hba.conf
    volumes:
      - "./db/postgresql.conf:/etc/postgresql.conf"
      - "./db/pg_hba.conf:/etc/pg_hba.conf"
      - curation_db_storage:/var/lib/postgresql/data/
      - "${CALTECH_CURATION_FILES_EXTERNAL_PATH}:${CALTECH_CURATION_FILES_INTERNAL_PATH}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${PSQL_USERNAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - caltech-curation-network
    hostname: curation_db

  postgres_prom_exporter:
    restart: unless-stopped
    image: wrouesnel/postgres_exporter
    environment:
      DATA_SOURCE_URI: curation_db:${PSQL_PORT}?sslmode=disable
      DATA_SOURCE_USER: ${PSQL_USERNAME}
      DATA_SOURCE_PASS: ${PSQL_PASSWORD}
      TZ: 'America/Los_Angeles'
    depends_on:
      - db
    networks:
      - caltech-curation-network
    hostname: postgres_prom_exporter

  prometheus:
    restart: unless-stopped
    image: prom/prometheus
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "./prometheus/rules.yml:/etc/prometheus/rules.yml"
      - "${VOLUMES_DIR}/prometheus:/prometheus"
    depends_on:
      - postgres_prom_exporter
      - grok_exporter_email_extr
      - grok_exporter_expression_cluster
      - grok_exporter_antibody
    networks:
      - caltech-curation-network
    environment:
      TZ: 'America/Los_Angeles'
    hostname: prometheus

  alertmanager:
    container_name: alert_manager
    restart: unless-stopped
    image: prom/alertmanager
    #ports:
    #  - "9093:9093"
    volumes:
      - ./prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    networks:
      - caltech-curation-network
    hostname: alertmanager

  grafana:
    image: grafana/grafana
    restart: unless-stopped
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - "${VOLUMES_DIR}/grafana:/var/lib/grafana"
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    depends_on:
      - db
      - prometheus
    networks:
      - caltech-curation-network
    environment:
      GF_SERVER_ROOT_URL: "https://${HOST_NAME}/grafana"
      TZ: 'America/Los_Angeles'

  jenkins:
    image: jenkins/jenkins:lts
    restart: always
    privileged: true
    user: root
    ports:
      - 49001:8080
      - 50000:50000
    container_name: jenkins
    volumes:
      - "${VOLUMES_DIR}/jenkins:/var/jenkins_home"
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/bin/docker

  curation:
    restart: unless-stopped
    build:
      context: .
      dockerfile: curation/Dockerfile
      args:
        SSH_ACEDB_PASSWORD: "${SSH_ACEDB_PASSWORD}"
        SSH_CITACE_PASSWORD: "${SSH_CITACE_PASSWORD}"
        CALTECH_CURATION_FILES_INTERNAL_PATH: "${CALTECH_CURATION_FILES_INTERNAL_PATH}"
    devices:
      - /dev/fuse:/dev/fuse:rwm
    cap_add:
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    environment:
      CALTECH_CURATION_FILES_INTERNAL_PATH: "${CALTECH_CURATION_FILES_INTERNAL_PATH}"
      HOST_NAME: "${HOST_NAME}"
      SSL_PORT: "${SSL_PORT}"
      RESTIC_REPOSITORY: "${RESTIC_REPO}"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID_RESTIC}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY_RESTIC}"
      RESTIC_PASSWORD: "${RESTIC_PASSWORD}"
      OKTA_DOMAIN: "${OKTA_DOMAIN}"
      OKTA_API_AUDIENCE: "${OKTA_API_AUDIENCE}"
      OKTA_CLIENT_ID: "${OKTA_CLIENT_ID}"
      OKTA_CLIENT_SECRET: "${OKTA_CLIENT_SECRET}"
      API_PORT: "${AGR_ABC_API_PORT}"
      API_SERVER: "${AGR_ABC_API_SERVER}"
      ENV_STATE: "${ENV_STATE}"
    ports:
      - "${CURATION_FORMS_PORT}:80"
      - "${SSL_PORT}:${SSL_PORT}"
      - "${SSH_PORT}:22"
    volumes:
      - "${HTTPD_AUTH_FILE_PATH}:/etc/httpd/passwd/passwords"
      - "${SRC_DIR_PATH}/curation/website/pub:/usr/lib/pub/"
      - "${SRC_DIR_PATH}/curation/website/priv:/usr/lib/priv/"
      - "${SRC_DIR_PATH}/curation/scripts/:/usr/lib/scripts/"
      - "${SRC_DIR_PATH}/curation/user_files/:/usr/lib/user_files/"
      - "${ENV_FILE_PATH}:/usr/lib/.env"
      - "${SRC_DIR_PATH}/curation/crontab:/etc/cron.d/curation_crontab"
      - "${SSL_CERTIFICATE_DIR}:/etc/ssl_certificate"
      - "${CALTECH_CURATION_FILES_EXTERNAL_PATH}:${CALTECH_CURATION_FILES_INTERNAL_PATH}"
      - "${VOLUMES_DIR}:/usr/caltech_volumes"
    networks:
      - caltech-curation-network
    hostname: curation

  acedb:
    # run 'xhost +local:root' on the host to give the right permissions to the instance
    build:
      context: acedb
      dockerfile: Dockerfile
      args:
        CALTECH_CURATION_FILES_INTERNAL_PATH: "${CALTECH_CURATION_FILES_INTERNAL_PATH}"
    environment:
      - DISPLAY=${DISPLAY}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - "${CALTECH_CURATION_FILES_EXTERNAL_PATH}:${CALTECH_CURATION_FILES_INTERNAL_PATH}"
    network_mode: host

  grok_exporter_email_extr:
    restart: unless-stopped
    container_name: grok_exporter_email_extr
    image: grok_exporter
    build: prometheus/grok_exporter/
    #ports:
    #  - "9144:9144"
    volumes:
      - ./prometheus/grok_exporter/config_email_extr.yml:/grok/config.yml
      - /var/log/:/grok/log/
    networks:
      - caltech-curation-network
    hostname: grok_exporter_email_extr

  grok_exporter_expression_cluster:
    restart: unless-stopped
    container_name: grok_exporter_expression_cluster
    image: grok_exporter
    build: prometheus/grok_exporter/
    #ports:
    #  - "9144:9144"
    volumes:
      - ./prometheus/grok_exporter/config_expr_cluster.yml:/grok/config.yml
      - /var/log/:/grok/log/
    networks:
      - caltech-curation-network
    hostname: grok_exporter_antibody

  grok_exporter_antibody:
    restart: unless-stopped
    container_name: grok_exporter_antibody
    image: grok_exporter
    build: prometheus/grok_exporter/
    #ports:
    #  - "9144:9144"
    volumes:
      - ./prometheus/grok_exporter/config_antibody.yml:/grok/config.yml
      - /var/log/:/grok/log/
    networks:
      - caltech-curation-network
    hostname: grok_exporter_antibody

  grok_exporter_afp:
    restart: unless-stopped
    container_name: grok_exporter_afp
    image: grok_exporter
    build: prometheus/grok_exporter/
    #ports:
    #  - "9145:9144"
    volumes:
      - ./prometheus/grok_exporter/config_afp.yml:/grok/config.yml
      - /var/log/:/grok/log/
    networks:
      - caltech-curation-network
    hostname: grok_exporter_afp

  grok_exporter_afp_reminders:
    restart: unless-stopped
    container_name: grok_exporter_afp_reminders
    image: grok_exporter
    build: ./prometheus/grok_exporter/
    #ports:
    #  - "9147:9144"
    volumes:
      - ./prometheus/grok_exporter/config_afp_reminders.yml:/grok/config.yml
      - /var/log/:/grok/log/
    networks:
      - caltech-curation-network
    hostname: grok_exporter_afp_reminders

  grok_exporter_afp_digests:
    restart: unless-stopped
    container_name: grok_exporter_afp_digests
    image: grok_exporter
    build: ./prometheus/grok_exporter/
    #ports:
    #  - "9148:9144"
    volumes:
      - ./prometheus/grok_exporter/config_afp_weekly_digests.yml:/grok/config.yml
      - /var/log/:/grok/log/
    networks:
      - caltech-curation-network
    hostname: grok_exporter_afp_digests

  grok_exporter_vfp:
    restart: unless-stopped
    container_name: grok_exporter_vfp
    image: grok_exporter
    build: ./prometheus/grok_exporter/
    #ports:
    #  - "9146:9144"
    volumes:
      - ./prometheus/grok_exporter/config_vfp.yml:/grok/config.yml
      - /var/log/:/grok/log/
    networks:
      - caltech-curation-network
    hostname: grok_exporter_vfp

networks:
  caltech-curation-network:
    name: caltech-curation-network

volumes:
  grafana_storage:
  curation_db_storage:
